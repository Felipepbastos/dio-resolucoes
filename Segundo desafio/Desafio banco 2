"""
separar as opções em funções 
criar 2 novas funções cadastrar usuario, cadastrar nova conta bancaria
usuario
nova conta bancaria, vinculada ao usuario
"""

menu = """

[u] Novo usuario
[c] Nova conta
[d] Depositar
[s] Sacar
[e] Extrato
[q] Sair

=> """



def deposito(saldo, valor, extrato, /):
    #positional
    if valor >0:
        saldo += valor
        extrato += f"Depósito\: R$ {valor:.2f}\n"
    else:        
        print("Operação falhou! O valor informado é inválido.")
    #retorna saldo e extrato
    return saldo, extrato

def saque(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
        excedeu_saldo = valor > saldo
        
        excedeu_limite = valor > limite

        excedeu_saques = numero_saques >= limite_saques

        if excedeu_saldo:
            print("Operação falhou! Você não tem saldo suficiente.")

        elif excedeu_limite:
            print("Operação falhou! O valor do saque excede o limite.")

        elif excedeu_saques:
            print("Operação falhou! Número máximo de saques excedido.")

        elif valor > 0:
            saldo -= valor
            extrato += f"Saque: R$ {valor:.2f}\n"
            numero_saques += 1

        else:
            print("Operação falhou! O valor informado é inválido.")
    #retorna saldo e extrato
        return saldo, extrato
    #keyworld
    

def exibir_extrato(saldo,/, * , extrato):
    #positional saldo keyworld extrato
    print("\n================ EXTRATO ================")
    print("Não foram realizadas movimentações." if not extrato else extrato)
    print(f"\nSaldo: R$ {saldo:.2f}")
    print("==========================================")
    

def cadastrar_usuario(usuarios):
    #nome, data de nascimento, cpf e endereço
    
    cpf = input("Informe seu cpf: ")
    #checa se o cpf esta como valor em qualquer usuario da lista
    
    if any(cpf == usuario["cpf"] for usuario in usuarios):
        print("CPF já cadastrado.")
        return
    nome = input("Digite seu nome: ")
    endereco = input("DIgite seu endereço: ")
    data_nascimento = input("Digite sua data da nascimento: ")

    #cadastra na lista usuarios
    usuarios.append({"nome": nome, "data_nascimento": data_nascimento, "cpf": cpf, "endereco": endereco})
   
    #endereço string com rua, numero, bairro, cidade/estado(em sigla)
    #somente 1 usuario por cpf
    print("Usuario cadastrado")

def checar_cpf(cpf, usuarios):
        if any(cpf == usuario["cpf"] for usuario in usuarios):
            return

def cadastrar_conta(agencia, numero_conta, usuarios):
    #agencia, numero de conta e usuario
    cpf = input("Informe seu cpf: ")
    if any(cpf == usuario["cpf"] for usuario in usuarios):
        print("CPF já possui usuario e sua conta foi criada.")
        return {"agencia": agencia, "numero de conta": numero_conta, "usuario": cpf}
    else:
        print("Voce não possui usuario cadastrado, realize o cadastro e tente novamente.")
    #usuario pode ter mais de 1 conta mas so 1 usuario por conta
    #numero fixo de agencia 0001
    


#caso queira funcao para listar contas

def main():
    LIMITE_SAQUES = 3
    AGENCIA = "0001"

    saldo = 0
    limite = 500
    extrato = ""
    numero_saques = 0
    usuarios = []
    contas = []
    

    while True:

        opcao = input(menu)

        if opcao == "d":
            valor = float(input("Informe o valor do depósito: "))                
            saldo, extrato = deposito(saldo, valor, extrato)

            

        elif opcao == "s":
            valor = float(input("Informe o valor do saque: "))

            saldo, extrato = saque(
                saldo = saldo,
                valor = valor,
                extrato = extrato,
                limite = limite,
                numero_saques = numero_saques,
                limite_saques = LIMITE_SAQUES,
                )


        elif opcao == "e":
            print(exibir_extrato(saldo, extrato = extrato))

        elif opcao == "u":
            cadastrar_usuario(usuarios)            

        elif opcao == "c":
            numero_conta = len(contas) + 1
            conta = cadastrar_conta(AGENCIA, numero_conta, usuarios)

            if conta:
                contas.append(conta)
  
            

        elif opcao == "q":
            break

        else:
            print("Operação inválida, por favor selecione novamente a operação desejada.")

main()
